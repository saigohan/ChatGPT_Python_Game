import pygame
import random

# ウィンドウサイズ
WIDTH, HEIGHT = 300, 600
# ブロックサイズ
BLOCK_SIZE = 30

# テトリミノの形状
TETROMINOS = {
    'I': [(0,0), (1,0), (2,0), (3,0)],
    'O': [(0,0), (1,0), (0,1), (1,1)],
    'T': [(1,0), (0,1), (1,1), (2,1)],
    'S': [(1,0), (2,0), (0,1), (1,1)],
    'Z': [(0,0), (1,0), (1,1), (2,1)],
    'J': [(0,0), (0,1), (1,1), (2,1)],
    'L': [(2,0), (0,1), (1,1), (2,1)]
}

# カラー設定
COLORS = {
    'I': (0, 240, 240),
    'O': (240, 240, 0),
    'T': (160, 0, 240),
    'S': (0, 240, 0),
    'Z': (240, 0, 0),
    'J': (0, 0, 240),
    'L': (240, 160, 0)
}

class Tetromino:
    def __init__(self, shape):
        self.shape = shape
        self.color = COLORS[shape]
        self.rotation = 0
        self.position = (WIDTH // 2 // BLOCK_SIZE, 0)

    def rotate(self):
        self.rotation = (self.rotation + 1) % 4

    def move(self, dx, dy):
        x, y = self.position
        self.position = (x + dx, y + dy)

def create_grid(locked_positions={}):
    grid = [[(0, 0, 0) for _ in range(10)] for _ in range(20)]
    for y in range(20):
        for x in range(10):
            if (x, y) in locked_positions:
                c = locked_positions[(x, y)]
                grid[y][x] = c
    return grid

def draw_window(win, grid):
    win.fill((0, 0, 0))
    for y, row in enumerate(grid):
        for x, color in enumerate(row):
            pygame.draw.rect(win, color, (x*BLOCK_SIZE, y*BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE), 0)

    pygame.display.update()

def main():
    pygame.init()
    win = pygame.display.set_mode((WIDTH, HEIGHT))
    pygame.display.set_caption('Tetris')

    locked_positions = {}
    grid = create_grid(locked_positions)

    run = True
    while run:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False

        draw_window(win, grid)

    pygame.quit()

if __name__ == '__main__':
    main()
